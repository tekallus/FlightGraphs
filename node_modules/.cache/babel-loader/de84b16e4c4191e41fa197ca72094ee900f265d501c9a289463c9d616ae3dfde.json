{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/cloudGCS/task2/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, Table, Row, Col, Input, Select, Button } from \"antd\";\nimport { CloseOutlined, MinusOutlined, BorderOutlined } from \"@ant-design/icons\";\n//Burada, React ve useState gibi gerekli modülleri ve antd kütüphanesinden gerekli bileşenleri alıyoruz.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n//Select bileşeninden Option bileşenini alıyoruz.\n\n//DataType adında bir interface tanımlıyoruz. Bu, her bir veri öğesinin veri yapısını tanımlıyor.\n\nconst columns = [{\n  title: \"Item\",\n  dataIndex: \"item\",\n  key: \"item\"\n}, {\n  title: \"Category\",\n  dataIndex: \"category\",\n  key: \"category\"\n}]; //Tablo sütunlarının yapılandırmasını tanımlıyoruz. Her sütunun başlığı (title), veri indeksi (dataIndex) ve benzersiz bir anahtar (key) içermesi gerekmektedir.\n\nconst initialData = [...Array(20)].map((_, index) => ({\n  key: index,\n  item: `Item ${index}`,\n  category: `Category ${index % 5}`\n})); //Başlangıç verisini oluşturuyoruz. 20 öğe içeren bir dizi oluşturuyoruz ve her öğe, key (benzersiz kimlik), item (öğe adı) ve category (kategori adı) alanlarına sahip bir nesne olacak şekilde yapılandırıyoruz.\n\nconst App = () => {\n  _s();\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [data, setData] = useState(initialData);\n  const [favorites, setFavorites] = useState([]);\n  const [makeFavorite, setMakeFavorite] = useState(false); //useState hook'unu kullanarak bileşenin içinde kullanacağımız durumları tanımlıyoruz.\n  //selectedRowKeys, seçilen satırların anahtarlarını içerir. data, tüm veri öğelerini içerir. favorites, favorilere eklenen öğeleri içerir.\n  //makeFavorite, favori oluşturma işleminin durumunu içerir.\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedRowKeys(selectedRowKeys);\n    },\n    getCheckboxProps: record => ({\n      disabled: record.item === \"Disabled User\" // Column configuration not to be checked\n    })\n  }; //Table bileşeninde kullanılacak olan seçim nesnesini tanımlıyoruz.\n  //Bu nesne, seçilen satırların anahtarlarını izler ve onChange fonksiyonu ile güncellenir.\n  //getCheckboxProps, her bir satır için özel checkbox özelliklerini belirtir ve 'Disabled User' olan satırların işaretlenmesini engeller.\n\n  const handleCreateFavorite = () => {\n    if (makeFavorite) {\n      const newFavorites = data.filter(item => selectedRowKeys.includes(item.key));\n      setFavorites([...favorites, ...newFavorites]);\n    }\n  }; //Favori oluşturma işlevini tanımlıyoruz. Eğer makeFavorite true ise, seçilen satırlardan favorilere eklenmemiş olanları yeni favoriler listesine ekliyoruz.\n\n  const handleDeleteFavorite = () => {\n    const remainingFavorites = favorites.filter(fav => !selectedRowKeys.includes(fav.key));\n    setFavorites(remainingFavorites);\n    setSelectedRowKeys([]); // Seçili öğeleri sıfırla\n  }; //Favori silme işlevini tanımlıyoruz. Seçilen favori öğeleri hariç tutarak kalan favorileri alıyoruz ve favorileri güncelliyoruz. Ayrıca, seçili öğelerin anahtarlarını sıfırlıyoruz.\n\n  const handleResetFavorites = () => {\n    setFavorites([]);\n  }; //Tüm favorileri sıfırlamak için bir işlev tanımlıyoruz.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-window\",\n    style: {\n      width: \"100%\",\n      maxWidth: \"960px\",\n      margin: \"0 auto\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"5px\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"window-header\",\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n        backgroundColor: \"#f0f0f0\",\n        borderBottom: \"1px solid #ccc\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          flex: 1\n        },\n        children: \"Flight Graphs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(MinusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(BorderOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 16,\n      style: {\n        padding: \"20px\",\n        backgroundColor: \"#f0f0f0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            flexGrow: 1,\n            overflow: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input.Group, {\n            compact: true,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: \"Search:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                width: \"calc(50% - 4px)\",\n                marginRight: \"4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: \"\",\n              style: {\n                width: \"30%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Option, {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            rowKey: \"key\",\n            columns: columns,\n            dataSource: data,\n            pagination: false,\n            rowSelection: rowSelection,\n            scroll: {\n              y: 240\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            style: {\n              marginRight: \"8px\"\n            },\n            onClick: handleCreateFavorite,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: makeFavorite,\n            onChange: e => setMakeFavorite(e.target.checked),\n            style: {\n              flex: 1,\n              marginRight: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"checkbox\",\n            children: \"Make Favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          title: \"Favorites\",\n          style: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            rowKey: \"key\",\n            columns: columns,\n            dataSource: favorites,\n            pagination: false,\n            rowSelection: rowSelection,\n            scroll: {\n              y: 240\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            style: {\n              marginRight: \"8px\"\n            },\n            onClick: handleDeleteFavorite,\n            children: \"Delete Favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            style: {\n              marginRight: \"8px\"\n            },\n            onClick: handleResetFavorites,\n            children: \"Reset Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fLHYADEcETnfvnsO82btMuoEmZo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Card","Table","Row","Col","Input","Select","Button","CloseOutlined","MinusOutlined","BorderOutlined","jsxDEV","_jsxDEV","Option","columns","title","dataIndex","key","initialData","Array","map","_","index","item","category","App","_s","selectedRowKeys","setSelectedRowKeys","data","setData","favorites","setFavorites","makeFavorite","setMakeFavorite","rowSelection","onChange","selectedRows","getCheckboxProps","record","disabled","handleCreateFavorite","newFavorites","filter","includes","handleDeleteFavorite","remainingFavorites","fav","handleResetFavorites","className","style","width","maxWidth","margin","border","borderRadius","overflow","children","display","alignItems","justifyContent","padding","backgroundColor","borderBottom","flex","fileName","_jsxFileName","lineNumber","columnNumber","icon","gutter","span","flexDirection","flexGrow","Group","compact","htmlFor","marginRight","defaultValue","value","rowKey","dataSource","pagination","scroll","y","marginTop","type","onClick","checked","e","target","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/cloudGCS/task2/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Table, Row, Col, Input, Select, Button } from \"antd\";\nimport {\n  CloseOutlined,\n  MinusOutlined,\n  BorderOutlined,\n} from \"@ant-design/icons\";\n//Burada, React ve useState gibi gerekli modülleri ve antd kütüphanesinden gerekli bileşenleri alıyoruz.\n\nconst { Option } = Select;\n//Select bileşeninden Option bileşenini alıyoruz.\n\ninterface DataType {\n  key: React.Key;\n  item: string;\n  category: string;\n} //DataType adında bir interface tanımlıyoruz. Bu, her bir veri öğesinin veri yapısını tanımlıyor.\n\nconst columns = [\n  {\n    title: \"Item\",\n    dataIndex: \"item\",\n    key: \"item\",\n  },\n  {\n    title: \"Category\",\n    dataIndex: \"category\",\n    key: \"category\",\n  },\n]; //Tablo sütunlarının yapılandırmasını tanımlıyoruz. Her sütunun başlığı (title), veri indeksi (dataIndex) ve benzersiz bir anahtar (key) içermesi gerekmektedir.\n\nconst initialData: DataType[] = [...Array(20)].map((_, index) => ({\n  key: index,\n  item: `Item ${index}`,\n  category: `Category ${index % 5}`,\n})); //Başlangıç verisini oluşturuyoruz. 20 öğe içeren bir dizi oluşturuyoruz ve her öğe, key (benzersiz kimlik), item (öğe adı) ve category (kategori adı) alanlarına sahip bir nesne olacak şekilde yapılandırıyoruz.\n\nconst App: React.FC = () => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n  const [data, setData] = useState<DataType[]>(initialData);\n  const [favorites, setFavorites] = useState<DataType[]>([]);\n  const [makeFavorite, setMakeFavorite] = useState(false); //useState hook'unu kullanarak bileşenin içinde kullanacağımız durumları tanımlıyoruz.\n  //selectedRowKeys, seçilen satırların anahtarlarını içerir. data, tüm veri öğelerini içerir. favorites, favorilere eklenen öğeleri içerir.\n  //makeFavorite, favori oluşturma işleminin durumunu içerir.\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedRowKeys: React.Key[], selectedRows: DataType[]) => {\n      setSelectedRowKeys(selectedRowKeys);\n    },\n    getCheckboxProps: (record: DataType) => ({\n      disabled: record.item === \"Disabled User\", // Column configuration not to be checked\n    }),\n  }; //Table bileşeninde kullanılacak olan seçim nesnesini tanımlıyoruz.\n  //Bu nesne, seçilen satırların anahtarlarını izler ve onChange fonksiyonu ile güncellenir.\n  //getCheckboxProps, her bir satır için özel checkbox özelliklerini belirtir ve 'Disabled User' olan satırların işaretlenmesini engeller.\n\n  const handleCreateFavorite = () => {\n    if (makeFavorite) {\n      const newFavorites = data.filter((item) =>\n        selectedRowKeys.includes(item.key)\n      );\n      setFavorites([...favorites, ...newFavorites]);\n    }\n  }; //Favori oluşturma işlevini tanımlıyoruz. Eğer makeFavorite true ise, seçilen satırlardan favorilere eklenmemiş olanları yeni favoriler listesine ekliyoruz.\n\n  const handleDeleteFavorite = () => {\n    const remainingFavorites = favorites.filter(\n      (fav) => !selectedRowKeys.includes(fav.key)\n    );\n    setFavorites(remainingFavorites);\n    setSelectedRowKeys([]); // Seçili öğeleri sıfırla\n  }; //Favori silme işlevini tanımlıyoruz. Seçilen favori öğeleri hariç tutarak kalan favorileri alıyoruz ve favorileri güncelliyoruz. Ayrıca, seçili öğelerin anahtarlarını sıfırlıyoruz.\n\n  const handleResetFavorites = () => {\n    setFavorites([]);\n  }; //Tüm favorileri sıfırlamak için bir işlev tanımlıyoruz.\n\n  return (\n    <div\n      className=\"custom-window\"\n      style={{\n        width: \"100%\",\n        maxWidth: \"960px\",\n        margin: \"0 auto\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"5px\",\n        overflow: \"hidden\",\n      }}\n    >\n      <div\n        className=\"window-header\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: \"10px\",\n          backgroundColor: \"#f0f0f0\",\n          borderBottom: \"1px solid #ccc\",\n        }}\n      >\n        <h2 style={{ flex: 1 }}>Flight Graphs</h2>\n        <Button icon={<MinusOutlined />} />\n        <Button icon={<BorderOutlined />} />\n        <Button icon={<CloseOutlined />} />\n      </div>\n      {/* Ant Design bileşenleriyle bir satır ve iki sütunlu bir layout oluşturuyoruz.*/}\n\n      <Row gutter={16} style={{ padding: \"20px\", backgroundColor: \"#f0f0f0\" }}>\n        <Col span={12} style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Card style={{ flexGrow: 1, overflow: \"auto\" }}>\n            <Input.Group compact>\n              <label htmlFor=\"\">Search:</label>\n              <Input style={{ width: \"calc(50% - 4px)\", marginRight: \"4px\" }} />\n              <Select defaultValue=\"\" style={{ width: \"30%\" }}>\n                <Option value=\"\">Select Category</Option>\n              </Select>\n              <button>x</button>\n            </Input.Group>\n            {/* Ant Design bileşenleriyle bir satır ve iki sütunlu bir layout oluşturuyoruz.*/}\n            <Table\n              rowKey=\"key\"\n              columns={columns}\n              dataSource={data}\n              pagination={false}\n              rowSelection={rowSelection}\n              scroll={{ y: 240 }}\n            />\n          {/* Favori oluşturma işlevi */}</Card>\n          <div style={{ marginTop: \"20px\" }}>\n            <Button\n              type=\"primary\"\n              style={{ marginRight: \"8px\" }}\n              onClick={handleCreateFavorite}\n            >\n              Create\n            </Button>\n            {/* Favori oluşturma onay kutusu */}<input\n              type=\"checkbox\"\n              checked={makeFavorite}\n              onChange={(e) => setMakeFavorite(e.target.checked)}\n              style={{ flex: 1, marginRight: \"8px\" }}\n            />\n            <label htmlFor=\"checkbox\">Make Favorite</label>\n          </div>\n        </Col>\n        <Col span={12} style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Card title=\"Favorites\" style={{ flexGrow: 1 }}>\n            <Table\n              rowKey=\"key\"\n              columns={columns}\n              dataSource={favorites}\n              pagination={false}\n              rowSelection={rowSelection}\n              scroll={{ y: 240 }}\n            />\n          </Card>\n          <div style={{ marginTop: \"20px\" }}>\n            <Button\n              type=\"primary\"\n              style={{ marginRight: \"8px\" }}\n              onClick={handleDeleteFavorite}\n            >\n              Delete Favorite\n            </Button>\n            <Button\n              type=\"primary\"\n              style={{ marginRight: \"8px\" }}\n              onClick={handleResetFavorites}\n            >\n              Reset Favorites\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}